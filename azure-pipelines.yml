trigger:
  - main

pool:
  name: 'devpoolsteve'

variables:
  nodeVersion: '18.x'

steps:
  # Install Node.js
  - task: UseNode@1
    inputs:
      version: $(nodeVersion)
    displayName: 'Install Node.js'

  # Install dependencies
  - script: |
      npm install
    displayName: 'Install dependencies'

  # Build the project
  - script: |
      npm run build
    displayName: 'Build project'

  # Run tests
  - script: |
      npm test
    displayName: 'Run tests'

  # Copy project files to artifact staging directory
  - task: CopyFiles@2
    inputs:
      sourceFolder: '$(Build.SourcesDirectory)'
      contents: |
        src/**
        public/**
      targetFolder: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Copy project files'

  # Publish pipeline artifact
  - task: PublishPipelineArtifact@1
    inputs:
      artifactName: 'nodejs-app'
      targetPath: '$(Build.ArtifactStagingDirectory)'
    displayName: 'Publish pipeline artifact'


  # Deploy to Azure Web App
  - task: AzureWebAppContainer@1
    inputs:
      azureSubscription: 'webappcontainers'
      appName: 'webappcontainermay28'
      containers: 'azuredocs/aci-helloworld'
    displayName: 'Deploy to Azure Web App'

# jobs:
# - job: Build
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   # - script: npm test
#   - task: PublishBuildArtifacts@1
#     inputs:
#       pathtoPublish: '$(System.DefaultWorkingDirectory)'
#       artifactName: WebSite

# # download the artifact and deploy it only if the build job succeeded
# - job: Deploy
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - checkout: none #skip checking out the default repository resource
#   - task: DownloadBuildArtifacts@0
#     displayName: 'Download Build Artifacts'
#     inputs:
#       artifactName: WebSite
#       downloadPath: $(Pipeline.Workspace)

#   dependsOn: Build
#   condition: succeeded()

# jobs:
# - job: Build
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   # - script: npm test
#   - task: PublishBuildArtifacts@1
#     inputs:
#       pathtoPublish: '$(System.DefaultWorkingDirectory)'
#       artifactName: WebSite

# # download the artifact and deploy it only if the build job succeeded
# - job: Deploy
#   pool:
#     vmImage: 'ubuntu-latest'
#   steps:
#   - checkout: none #skip checking out the default repository resource
#   - task: DownloadBuildArtifacts@0
#     displayName: 'Download Build Artifacts'
#     inputs:
#       artifactName: WebSite
#       downloadPath: $(Pipeline.Workspace)

#   dependsOn: Build
#   condition: succeeded()


    # steps:
    # - task: NodeTool@0
    #   inputs:
    #     versionSpec: '16.x'
    #   displayName: 'Install Node.js'
    # - script: echo $(Build.BuildNumber)
    
    # - script: |
    #     npm install
    #   displayName: 'npm install'
    
    # - script: |
    #     npm run build
    #   displayName: 'npm build'

    # - task: CopyFiles@2
    #   inputs:
    #     sourceFolder: '$(Build.SourcesDirectory)'
    #     contents: |
    #        src/*
    #        public/*
    #     targetFolder: '$(Build.ArtifactStagingDirectory)'
    #   displayName: 'Copy project files'
    
    # - task: PublishPipelineArtifact@1
    #   inputs:
    #     artifactName: e2e-server
    #     targetPath: '$(Build.ArtifactStagingDirectory)'
    #     publishLocation: 'pipeline'
    #   displayName: 'Publish npm artifact'