trigger:
  - main

parameters:
- name: serviceConnection
  displayName: Azure Service Connection Name
  type: string
  default: my-test-service-connection

steps:
# Specify python version
- task: UsePythonVersion@0
  inputs:
    versionSpec: '3.x'
    architecture: 'x64'

# Update to latest Azure CLI version
- pwsh: pip install --pre azure-cli
  displayName: 'Upgrade Azure CLI'
  
- task: AzureCLI@2
  condition: succeededOrFailed()
  displayName: 'Azure CLI -> DevOps CLI'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: 'pscore'
    scriptLocation: 'inlineScript'
    inlineScript: |
      Write-Host "Using logged-in Azure CLI session..."
      Write-Host "$($PSStyle.Formatting.FormatAccent)az devops configure$($PSStyle.Reset)"
      az devops configure --defaults organization=$(System.CollectionUri) project=$(System.TeamProject)
      az devops configure -l
      
      Write-Host "`nUse Azure DevOps CLI (az devops) to list projects in the organization '$(System.CollectionUri)'..."
      Write-Host "$($PSStyle.Formatting.FormatAccent)az devops project list$($PSStyle.Reset)"
      az devops project list --query "value[].{Name:name, Id:id}" `
                              -o table
      
      Write-Host "`nUse Azure DevOps CLI (az pipelines) to list pools in the organization '$(System.CollectionUri)'..."
      Write-Host "$($PSStyle.Formatting.FormatAccent)az pipelines pool list$($PSStyle.Reset)"
      az pipelines pool list --query "[].{Id:id, Name:name}" `
                              -o table
    failOnStandardError: true

- task: AzureCLI@2
  condition: succeededOrFailed()
  displayName: 'List all builds in Azure DevOps project'
  inputs:
    azureSubscription: ${{ parameters.serviceConnection }}
    scriptType: pscore
    scriptLocation: inlineScript
    inlineScript: |
      Write-Host "Using logged-in Azure CLI session..."
      Write-Host "$($PSStyle.Formatting.FormatAccent)az devops configure$($PSStyle.Reset)"
      az devops configure --defaults organization=$(System.CollectionUri) project=$(System.TeamProject)
      az devops configure -l

      Write-Host "`nListing all builds in the specified Azure DevOps organization and project..."
      Write-Host "$($PSStyle.Formatting.FormatAccent)az pipelines build list$($PSStyle.Reset)"
      az pipelines build list --organization $(System.CollectionUri) --project $(System.TeamProject) -o table
    failOnStandardError: true

    # trigger:
    #   - main
    
    # pool:
    #   vmImage: 'ubuntu-latest'
    
    # variables:
    #   nodeVersion: '18.x'
    
    # steps:
    #   # Install Node.js
    #   - task: UseNode@1
    #     inputs:
    #       version: $(nodeVersion)
    #     displayName: 'Install Node.js'
    
    #   # Install dependencies
    #   - script: |
    #       npm install
    #     displayName: 'Install dependencies'
    
    #   # Build the project
    #   - script: |
    #       npm run build
    #     displayName: 'Build project'
    
    #   # Run tests
    #   - script: |
    #       npm test
    #     displayName: 'Run tests'
    
    #   # Copy project files to artifact staging directory
    #   - task: CopyFiles@2
    #     inputs:
    #       sourceFolder: '$(Build.SourcesDirectory)'
    #       contents: |
    #         src/**
    #         public/**
    #       targetFolder: '$(Build.ArtifactStagingDirectory)'
    #     displayName: 'Copy project files'
    
    #   # Publish pipeline artifact
    #   - task: PublishPipelineArtifact@1
    #     inputs:
    #       artifactName: 'nodejs-app'
    #       targetPath: '$(Build.ArtifactStagingDirectory)'
    #     displayName: 'Publish pipeline artifact'
